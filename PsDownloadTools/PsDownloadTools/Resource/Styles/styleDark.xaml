<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:custom="clr-namespace:PsDownloadTools.Custom">

    <SolidColorBrush x:Key="ColorWindowBackground" Color="#FF323232"/>
    <SolidColorBrush x:Key="ColorWindowBorder" Color="#99000000"/>
    <SolidColorBrush x:Key="ColorTextDefault" Color="#FF969696"/>
    <SolidColorBrush x:Key="ColorTextRed" Color="#FFF56937"/>
    <SolidColorBrush x:Key="ColorTextLight" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ColorAccent" Color="#FF0073BE"/>
    <SolidColorBrush x:Key="ColorAccentDeep" Color="#FF004BA0"/>
    <SolidColorBrush x:Key="ColorControlBorder" Color="#FF505050"/>
    <SolidColorBrush x:Key="ColorListViewBackground" Color="#FF282828"/>
    <SolidColorBrush x:Key="ColorListViewBorder" Color="#FF1E1E1E"/>
    <SolidColorBrush x:Key="ColorPopupBackground" Color="#FF1E1E1E"/>
    <SolidColorBrush x:Key="ColorPopupBorder" Color="#FF646464"/>
    <SolidColorBrush x:Key="ColorPopupOverDraw" Color="#7F323232"/>
    <SolidColorBrush x:Key="ColorCloseBorder" Color="#FFF56937"/>
    <SolidColorBrush x:Key="ColorCloseMain" Color="#FFDC4B1E"/>
    <SolidColorBrush x:Key="ColorMaxBorder" Color="#FF7D9BD2"/>
    <SolidColorBrush x:Key="ColorMaxMain" Color="#FF4669B9"/>
    <SolidColorBrush x:Key="ColorMinBorder" Color="#FF55C39B"/>
    <SolidColorBrush x:Key="ColorMinMain" Color="#FF14AA8C"/>
    <SolidColorBrush x:Key="ColorAboutBorder" Color="#FFD782C3"/>
    <SolidColorBrush x:Key="ColorAboutMain" Color="#FFC350B4"/>
    <SolidColorBrush x:Key="ColorYellow1" Color="#FFFFEBA0"/>
    <SolidColorBrush x:Key="ColorYellow2" Color="#FFFFDC1E"/>
    <SolidColorBrush x:Key="ColorYellow3" Color="#FFF5C805"/>
    <SolidColorBrush x:Key="ColorYellow4" Color="#FFD2A505"/>
    <SolidColorBrush x:Key="ColorRed" Color="#FFBE4637"/>
    <SolidColorBrush x:Key="ColorGreen" Color="#FF23965A"/>
    <SolidColorBrush x:Key="ColorYellow" Color="#FFC88737"/>

    <LinearGradientBrush x:Key="ColorCloseGradientHover" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFF56937" Offset="0"/>
        <GradientStop Color="#FFDC4B1E" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorCloseGradientPressed" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFDC4B1E" Offset="0"/>
        <GradientStop Color="#FFD73714" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorMaxGradientHover" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF7D9BD2" Offset="0"/>
        <GradientStop Color="#FF4669B9" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorMaxGradientPressed" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF4669B9" Offset="0"/>
        <GradientStop Color="#FF3250AF" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorMinGradientHover" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF55C39B" Offset="0"/>
        <GradientStop Color="#FF14AA8C" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorMinGradientPressed" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF14AA8C" Offset="0"/>
        <GradientStop Color="#FF0F9B7D" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorAboutGradientHover" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFD782C3" Offset="0"/>
        <GradientStop Color="#FFC350B4" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorAboutGradientPressed" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFC350B4" Offset="0"/>
        <GradientStop Color="#FFBE37AA" Offset="1"/>
    </LinearGradientBrush>

    <PathGeometry x:Key="PathClose">
        M1.1,2.5 C.9,2.3,1,2,1.3,2 H3.6 C3.8,2,3.9,2.1,4,2.2 L6,4.3 L8,2.2 C8.1,2.1,8.2,2,8.4,2 H10.7 C11,2,11.1,2.3,10.9,2.5 L7.6,6 L10.9,9.5 C11.1,9.7,11,10,10.7,10 H8.4 C8.2,10,8.1,9.9,8,9.8 L6,7.7 L4,9.8 C3.9,9.9,3.8,10,3.6,10 H1.3 C1,10,.9,9.7,1.1,9.5 L4.4,6 Z
    </PathGeometry>
    <PathGeometry x:Key="PathMax">
        M1,3 A1,1,0,0,1,2,2 H10 A1,1,0,0,1,11,3 V9 A1,1,0,0,1,10,10 H2 A1,1,0,0,1,1,9 Z
        M3.5,4 A.5,.5,0,0,0,3,4.5 V7.5 A.5,.5,0,0,0,3.5,8 H8.5 A.5,.5,0,0,0,9,7.5 V4.5 A.5,.5,0,0,0,8.5,4 Z
    </PathGeometry>
    <PathGeometry x:Key="PathRestore">
        M3,2 A1,1,0,0,1,4,1 H11 A1,1,0,0,1,12,2 V7 A1,1,0,0,1,11,8 H9 V10 A1,1,0,0,1,8,11 H1 A1,1,0,0,1,0,10 V6 A1,1,0,0,1,1,5 H3 Z
        M5.5,3 A.5,.5,0,0,0,5,3.5 V5 H8 A1,1,0,0,1,9,6 H9.5 A.5,.5,0,0,0,10,5.5 V3.5 A.5,.5,0,0,0,9.5,3 Z
        M2.5,7 A.5,.5,0,0,0,2,7.5 V8.5 A.5,.5,0,0,0,2.5,9 H6.5 A.5,.5,0,0,0,7,8.5 V7.5A.5,.5,0,0,0,6.5,7 Z
    </PathGeometry>
    <PathGeometry x:Key="PathMin">
        M1,8 A1,1,00,0,1,2,7 H10 A1,1,00,0,1,11,8 V9 A1,1,00,0,1,10,10 H2 A1,1,00,0,1,1,9 Z
    </PathGeometry>
    <PathGeometry x:Key="PathAbout">
        M1,1.5 A.5,.5,0,0,1,1.5,1 H10 A1,1,0,0,1,11,2 V6 A1,1,0,0,1,10,7 H6.5 A.5,.5,0,0,0,6,7.5 V8.5 A.5,.5,0,0,1,5.5,9 H4.5 A.5,.5,0,0,1,4,8.5 V6 A1,1,0,0,1,5,5 H8.5 A.5,.5,0,0,0,9,4.5 V3.5 A.5,.5,0,0,0,8.5,3 H1.5 A.5,.5,0,0,1,1,2.5 Z
        M4,10.5 A.5,.5,0,0,1,4.5,10 H5.5 A.5,.5,0,0,1,6,10.5 V11.5 A.5,.5,0,0,1,5.5,12 H4.5 A.5,.5,0,0,1,4,11.5 Z
    </PathGeometry>
    <PathGeometry x:Key="PathDropDown">
        M.6,.4 C.8,.2,1.2,.2,1.4,.4 L2.8,1.8 C2.9,1.9,3.1,1.9,3.2,1.8 L4.6,.4 C4.8,.2,5.2,.2,5.4,.4 L5.6,.6 C5.8,.8,5.8,1.2,5.6,1.4 L3.4,3.6 C3.2,3.8,2.8,3.8,2.6,3.6 L.4,1.4 C.2,1.2,.2,.8,.4,.6 Z
    </PathGeometry>
    <PathGeometry x:Key="PathDownload">
        M6,.5 A.5,.5,0,0,1,6.5,0 H9.5 A.5,.5,0,0,1,10,.5 V5.5 A.5,.5,0,0,0,10.5,6 H13 C13.7,6,13.8,6.7,13.5,7 L8.5,12 C8.2,12.3,7.8,12.3,7.5,12 L2.5,7 C2.2,6.7,2.3,6,3,6 H5.5 A.5,.5,0,0,0,6,5.5 Z
        M1,12.5 A.5,.5,0,0,1,2,12.5 V14.7 A.3,.3,0,0,0,2.3,15 H13.7 A.3,.3,0,0,0,14,14.7 V12.5 A.5,.5,0,0,1,15,12.5 V15.5 A.5,.5,0,0,1,14.5,16 H1.5 A.5,.5,0,0,1,1,15.5 Z
    </PathGeometry>
    <PathGeometry x:Key="PathCopy">
        M1,.5 A.5,.5,0,0,1,1.5,0 H11.5 A.5,.5,0,0,1,12,.5 V12.5 A.5,.5,0,0,1,11.5,13 H1.5 A.5,.5,0,0,1,1,12.5 Z
        M2.3,1 A.3,.3,0,0,0,2,1.3 V11.7 A.3,.3,0,0,0,2.3,12 H10.7 A.3,.3,0,0,0,11,11.7 V1.3 A.3,.3,0,0,0,10.7,1 Z
        M3,2 h7 v1 h-7 Z
        M3,4 h7 v1 h-7 Z
        M3,6 h7 v1 h-7 Z
        M3,8 h4 v1 h-4 Z
        M13,3 H14.5 A.5,.5,0,0,1,15,3.5 V15.5 A.5,.5,0,0,1,14.5,16 H4.5 A.5,.5,0,0,1,4,15.5 V14 H12.7 A.3,.3,0,0,0,13,13.7 Z
    </PathGeometry>
    <PathGeometry x:Key="PathOpen">
        M1,3.5 A.5,.5,0,0,1,1.5,3 H7.6 C7.8,3,7.9,2.9,8,2.8 L9.6,1.2 C9.7,1.1,9.8,1,10,1 H13.5 A.5,.5,0,0,1,14,1.5 V7 H15.3 C15.7,7,15.9,7.3,15.8,7.6 L14,14.5 C13.9,14.8,13.8,15,13.5,15 H1.5 A.5,.5,0,0,1,1,14.5 Z
        M2.3,4 A.3,.3,0,0,0,2,4.3 V13 L4,7.5 C4.1,7.2,4.2,7,4.5,7 H13 V2.3 A.3,.3,0,0,0,12.7,2 H10.4 C10.2,2,10.1,2.1,10,2.2 L8.4,3.8 C8.3,3.9,8.2,4,8,4 Z
    </PathGeometry>
    <PathGeometry x:Key="PathStart">
        M2,1 C2,.5,2.5,.2,3,.5 L11,5.5 C11.3,5.8,11.3,6.2,11,6.5 L3,11.5 C2.5,11.8,2,11.5,2,11 Z
    </PathGeometry>
    <PathGeometry x:Key="PathPause">
        M1,1.5 A.5,.5,0,0,1,1.5,1 H4.5 A.5,.5,0,0,1,5,1.5 V10.5 A.5,.5,0,0,1,4.5,11 H1.5 A.5,.5,0,0,1,1,10.5 Z
        M7,1.5 A.5,.5,0,0,1,7.5,1 H10.5 A.5,.5,0,0,1,11,1.5 V10.5 A.5,.5,0,0,1,10.5,11 H7.5 A.5,.5,0,0,1,7,10.5 Z
    </PathGeometry>
    <PathGeometry x:Key="PathCancel">
        M1,2 A1,1,0,0,1,2,1 H10 A1,1,0,0,1,11,2 V10 A1,1,0,0,1,10,11 H2 A1,1,0,0,1,1,10 Z
    </PathGeometry>

    <Storyboard x:Key="DialogProgressShow">
        <ObjectAnimationUsingKeyFrames  Storyboard.TargetName="Grid_Progress" Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame  KeyTime="0:0:0">
                <DiscreteObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                </DiscreteObjectKeyFrame.Value>
            </DiscreteObjectKeyFrame>
        </ObjectAnimationUsingKeyFrames>

        <DoubleAnimation Storyboard.TargetName="Grid_Content_Blur" Storyboard.TargetProperty="Radius" Duration="0:0:0.5" To="16">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <DoubleAnimation Storyboard.TargetName="Grid_Progress" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="1">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Cpb" Storyboard.TargetProperty="IsStop">
            <DiscreteBooleanKeyFrame KeyTime="0:0:0.0" Value="True"/>
            <DiscreteBooleanKeyFrame KeyTime="0:0:0.5" Value="False"/>
        </BooleanAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="DialogProgressHide" x:Shared="False">
        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Cpb" Storyboard.TargetProperty="IsStop">
            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
        </BooleanAnimationUsingKeyFrames>

        <DoubleAnimation Storyboard.TargetName="Grid_Content_Blur" Storyboard.TargetProperty="Radius" BeginTime="0:0:0.5" Duration="0:0:0.5" To="0">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <DoubleAnimation Storyboard.TargetName="Grid_Progress" Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.5" Duration="0:0:0.5" To="0">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <ObjectAnimationUsingKeyFrames  Storyboard.TargetName="Grid_Progress" Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame  KeyTime="0:0:1">
                <DiscreteObjectKeyFrame.Value>
                    <Visibility>Collapsed</Visibility>
                </DiscreteObjectKeyFrame.Value>
            </DiscreteObjectKeyFrame>
        </ObjectAnimationUsingKeyFrames>

        <ObjectAnimationUsingKeyFrames  Storyboard.TargetName="Tb_Progress" Storyboard.TargetProperty="Text">
            <DiscreteObjectKeyFrame  KeyTime="0:0:1" Value=""/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="BadgeShow">
        <DoubleAnimation Storyboard.TargetName="Lb_Badge" Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.5" To="1">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <DoubleAnimation Storyboard.TargetName="Lb_Badge" Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.5" To="1">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    <Storyboard x:Key="BadgeHide">
        <DoubleAnimation Storyboard.TargetName="Lb_Badge" Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.5" To="0">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <DoubleAnimation Storyboard.TargetName="Lb_Badge" Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.5" To="0">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Style x:Key="WindowDefault" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource ColorWindowBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ColorWindowBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="UseLayoutRounding" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Grid>
                                    <AdornerDecorator>
                                        <ContentPresenter/>
                                    </AdornerDecorator>
                                    <ResizeGrip Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="False" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                                        <Condition Property="WindowState" Value="Normal"/>
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LbDefault" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource ColorTextDefault}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ColorTextRed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxDefault" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource ColorTextLight}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource ColorAccent}"/>
        <Setter Property="CaretBrush" Value="{StaticResource ColorTextLight}"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="Padding" Value="2,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="border" SnapsToDevicePixels="True" BorderBrush="{StaticResource ColorControlBorder}" BorderThickness="0,0,0,1">
                        <ScrollViewer Name="PART_ContentHost" Focusable="False" Margin="{TemplateBinding Padding}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ColorAccent}"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ColorAccent}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBlockDefault" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="Foreground" Value="{StaticResource ColorTextDefault}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BtnDefault" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle SnapsToDevicePixels="True" RadiusX="14" RadiusY="14" Opacity="0.5" Fill="{StaticResource ColorAccent}" StrokeThickness="2" Stroke="{StaticResource ColorAccentDeep}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="border" SnapsToDevicePixels="True">
                        <Rectangle Name="rec" RadiusX="14" RadiusY="14" Stroke="{StaticResource ColorControlBorder}" StrokeThickness="1"/>
                        <ContentPresenter Name="contentPresenter" TextElement.Foreground="{StaticResource ColorTextDefault}" Margin="12,0,12,0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="True"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rec" Property="Fill"                                Value="{StaticResource ColorAccentDeep}"/>
                            <Setter TargetName="rec" Property="Stroke"                              Value="{StaticResource ColorAccent}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ColorTextLight}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="rec" Property="Fill"                                Value="{StaticResource ColorAccentDeep}"/>
                            <Setter TargetName="rec" Property="Stroke"                              Value="{StaticResource ColorAccentDeep}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ColorTextLight}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarDefault" TargetType="{x:Type ScrollBar}">
        <Style.Resources>
            <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Rectangle SnapsToDevicePixels="True" Width="8" RadiusX="4" RadiusY="4" Margin="1,1,1,1" Fill="{TemplateBinding Foreground}" Height="{TemplateBinding Height}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Rectangle SnapsToDevicePixels="True" Height="8" RadiusX="4" RadiusY="4" Margin="1,1,1,1" Fill="{TemplateBinding Foreground}" Width="{TemplateBinding Width}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                        <Track Name="PART_Track" IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.DecreaseRepeatButton>

                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.IncreaseRepeatButton>

                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" Foreground="{TemplateBinding Foreground}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                                <Track Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.DecreaseRepeatButton>

                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.IncreaseRepeatButton>

                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" Foreground="{TemplateBinding Foreground}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SvDefault" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Rectangle Name="Corner" Opacity="0.3" Fill="{StaticResource ColorPopupBackground}" Grid.Row="1" Grid.Column="1"/>
                        <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanHorizontallyScroll="False" CanVerticallyScroll="False" CanContentScroll="{TemplateBinding CanContentScroll}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Row="0" Grid.Column="0"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
                                       Opacity="0.3"
                                       Width="10"
                                       MinWidth="10"
                                       Foreground="{StaticResource ColorControlBorder}"
                                       Background="{StaticResource ColorPopupBackground}"
                                       Style="{StaticResource ScrollBarDefault}"
                                       AutomationProperties.AutomationId="VerticalScrollBar"
                                       Cursor="Arrow"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Grid.Row="0"
                                       Grid.Column="1"/>

                        <ScrollBar Name="PART_HorizontalScrollBar"
                                       Opacity="0.3"
                                       Height="10"
                                       MinHeight="10"
                                       Foreground="{StaticResource ColorControlBorder}"
                                       Background="{StaticResource ColorPopupBackground}"
                                       Style="{StaticResource ScrollBarDefault}"
                                       Orientation="Horizontal"
                                       AutomationProperties.AutomationId="HorizontalScrollBar"
                                       Cursor="Arrow"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Grid.Row="1"
                                       Grid.Column="0"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged" >
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"   Storyboard.TargetProperty="Opacity" To="1"   Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"   Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5" BeginTime="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1"   Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5" BeginTime="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="1"   Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5" BeginTime="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_VerticalScrollBar" RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                 Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_VerticalScrollBar" RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                 Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_HorizontalScrollBar" RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_HorizontalScrollBar" RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SvDefaultGrid" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Rectangle Name="Corner" Opacity="0.3" Fill="{StaticResource ColorPopupBackground}" Grid.Row="1" Grid.Column="1"/>
                        <DockPanel Margin="0">
                            <ScrollViewer DockPanel.Dock="Top" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                                ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                                ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                                Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <GridViewHeaderRowPresenter.ColumnHeaderContainerStyle>
                                        <Style TargetType="GridViewColumnHeader">
                                            <Setter Property="Height" Value="28"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="GridViewColumnHeader">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <Rectangle Name="Rec" IsHitTestVisible="True" Fill="{StaticResource ColorPopupBackground}" Opacity="0.3"/>
                                                            <Border Name="HeaderBorder" BorderThickness="0,0,0,1" BorderBrush="{StaticResource ColorWindowBackground}">
                                                                <ContentPresenter Name="HeaderContent" TextElement.Foreground="{StaticResource ColorTextDefault}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="4,0,8,1" VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </Border>

                                                            <Thumb Name="PART_HeaderGripper" HorizontalAlignment="Right">
                                                                <Thumb.Template>
                                                                    <ControlTemplate TargetType="Thumb">
                                                                        <Grid Background="Transparent" Width="4">
                                                                            <Border Name="Bd" Background="{StaticResource ColorWindowBackground}" Width="1" HorizontalAlignment="Right"/>
                                                                        </Grid>

                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ColorControlBorder}"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Thumb.Template>
                                                            </Thumb>
                                                        </Grid>

                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter TargetName="Rec" Property="Opacity" Value="1" />
                                                            </Trigger>

                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="Rec" Property="Opacity" Value="1" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GridViewHeaderRowPresenter.ColumnHeaderContainerStyle>
                                </GridViewHeaderRowPresenter>
                            </ScrollViewer>

                            <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" KeyboardNavigation.DirectionalNavigation="Local" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>

                        <ScrollBar Name="PART_VerticalScrollBar"
                                       Opacity="0.3"
                                       Width="10"
                                       MinWidth="10"
                                       Foreground="{StaticResource ColorControlBorder}"
                                       Background="{StaticResource ColorPopupBackground}"
                                       Style="{StaticResource ScrollBarDefault}"
                                       Orientation="Vertical"
                                       Cursor="Arrow"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Grid.Row="0"
                                       Grid.Column="1"/>

                        <ScrollBar Name="PART_HorizontalScrollBar"
                                       Opacity="0.3"
                                       Height="10"
                                       MinHeight="10"
                                       Foreground="{StaticResource ColorControlBorder}"
                                       Background="{StaticResource ColorPopupBackground}"
                                       Style="{StaticResource ScrollBarDefault}"
                                       Orientation="Horizontal"
                                       Cursor="Arrow"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Grid.Row="1"
                                       Grid.Column="0"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged" >
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"   Storyboard.TargetProperty="Opacity" To="1"   Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"   Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5" BeginTime="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1"   Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5" BeginTime="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="1"   Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5" BeginTime="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_VerticalScrollBar" RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                 Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_VerticalScrollBar" RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                 Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_HorizontalScrollBar" RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_HorizontalScrollBar" RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SvAbout" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Rectangle Name="Corner" Opacity="0.7" Fill="Transparent" Grid.Row="1" Grid.Column="1"/>
                        <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanHorizontallyScroll="False" CanVerticallyScroll="False" CanContentScroll="{TemplateBinding CanContentScroll}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Row="0" Grid.Column="0"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
                                       Opacity="0.7"
                                       Width="10"
                                       MinWidth="10"
                                       Foreground="{StaticResource ColorControlBorder}"
                                       Background="Transparent"
                                       Style="{StaticResource ScrollBarDefault}"
                                       AutomationProperties.AutomationId="VerticalScrollBar"
                                       Cursor="Arrow"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Grid.Row="0"
                                       Grid.Column="1"/>

                        <ScrollBar Name="PART_HorizontalScrollBar"
                                       Opacity="0.7"
                                       Height="10"
                                       MinHeight="10"
                                       Foreground="{StaticResource ColorControlBorder}"
                                       Background="Transparent"
                                       Style="{StaticResource ScrollBarDefault}"
                                       Orientation="Horizontal"
                                       AutomationProperties.AutomationId="HorizontalScrollBar"
                                       Cursor="Arrow"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Grid.Row="1"
                                       Grid.Column="0"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged" >
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"   Storyboard.TargetProperty="Opacity" To="1"   Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"   Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.5" BeginTime="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1"   Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.5" BeginTime="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="1"   Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.5" BeginTime="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_VerticalScrollBar" RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                 Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_VerticalScrollBar" RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                 Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_HorizontalScrollBar" RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger SourceName="PART_HorizontalScrollBar" RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.5"/>
                                    <DoubleAnimation Storyboard.TargetName="Corner"                   Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CbDefault" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{StaticResource ColorTextLight}"/>

        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle SnapsToDevicePixels="True" Opacity="0.5" Fill="{StaticResource ColorAccent}" StrokeThickness="2" Stroke="{StaticResource ColorAccentDeep}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Height" Value="28"/>

                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle SnapsToDevicePixels="True" Opacity="0.5" StrokeThickness="2" Stroke="{StaticResource ColorAccentDeep}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Back" Background="Transparent">
                                    <ContentPresenter ContentSource="{Binding Source}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="{StaticResource ColorControlBorder}"/>
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="{StaticResource ColorAccent}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Name="templateRoot" SnapsToDevicePixels="True">
                        <Popup Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Border Name="dropDownBorder" Background="{StaticResource ColorPopupBackground}" Margin="16" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Border.Effect>
                                    <DropShadowEffect Direction="270" BlurRadius="16" Opacity="0.3" ShadowDepth="6"/>
                                </Border.Effect>

                                <ScrollViewer Name="DropDownScrollViewer" Style="{StaticResource SvDefault}">
                                    <StackPanel IsItemsHost="True" RenderOptions.ClearTypeHint="Enabled" KeyboardNavigation.DirectionalNavigation="Continue" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>

                        <ToggleButton Name="toggleButton" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border Name="templateRoot" BorderBrush="{StaticResource ColorControlBorder}" BorderThickness="0,0,0,1" Background="Transparent" SnapsToDevicePixels="True">
                                                    <Border Name="splitBorder" HorizontalAlignment="Right" SnapsToDevicePixels="True" Width="16">
                                                        <Path Name="arrow" Data="{StaticResource PathDropDown}" Fill="{StaticResource ColorControlBorder}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </Border>

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ColorAccent}"/>
                                                        <Setter TargetName="arrow"        Property="Fill"        Value="{StaticResource ColorAccent}"/>
                                                    </Trigger>

                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="templateRoot" Property="Opacity" Value="0.3"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ContentPresenter Name="contentPresenter" Margin="4,3,4,3" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" VerticalAlignment="Center"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="dropDownBorder" Property="Height" Value="28"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BtnAbout" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle SnapsToDevicePixels="True" Opacity="0.5" Fill="{StaticResource ColorAboutMain}" StrokeThickness="2" Stroke="{StaticResource ColorAboutBorder}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Bd" BorderThickness="1" Background="Transparent">
                        <Path Name="Pth_Close" Data="{StaticResource PathAbout}" Fill="{StaticResource ColorTextDefault}" Width="12" Height="12" Canvas.Left="-6" Canvas.Top="-6"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Pth_Close" Property="Fill"        Value="{StaticResource ColorTextLight}"/>
                            <Setter TargetName="Bd"        Property="Background"  Value="{StaticResource ColorAboutGradientHover}"/>
                            <Setter TargetName="Bd"        Property="BorderBrush" Value="{StaticResource ColorAboutBorder}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Pth_Close" Property="Fill"        Value="{StaticResource ColorTextLight}"/>
                            <Setter TargetName="Bd"        Property="Background"  Value="{StaticResource ColorAboutGradientPressed}"/>
                            <Setter TargetName="Bd"        Property="BorderBrush" Value="{StaticResource ColorAboutBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BtnMin" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle SnapsToDevicePixels="True" Opacity="0.5" Fill="{StaticResource ColorMinMain}" StrokeThickness="2" Stroke="{StaticResource ColorMinBorder}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Bd" BorderThickness="1" Background="Transparent">
                        <Path Name="Pth_Close" Data="{StaticResource PathMin}" Fill="{StaticResource ColorTextDefault}" Width="12" Height="12" Canvas.Left="-6" Canvas.Top="-6"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Pth_Close" Property="Fill"        Value="{StaticResource ColorTextLight}"/>
                            <Setter TargetName="Bd"        Property="Background"  Value="{StaticResource ColorMinGradientHover}"/>
                            <Setter TargetName="Bd"        Property="BorderBrush" Value="{StaticResource ColorMinBorder}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Pth_Close" Property="Fill"        Value="{StaticResource ColorTextLight}"/>
                            <Setter TargetName="Bd"        Property="Background"  Value="{StaticResource ColorMinGradientPressed}"/>
                            <Setter TargetName="Bd"        Property="BorderBrush" Value="{StaticResource ColorMinBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChkMaxRestore" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle SnapsToDevicePixels="True" Opacity="0.5" Fill="{StaticResource ColorMaxMain}" StrokeThickness="2" Stroke="{StaticResource ColorMaxBorder}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Name="Bd" BorderThickness="1" Background="Transparent">
                        <Path Name="Pth_Close" Data="{StaticResource PathMax}" Fill="{StaticResource ColorTextDefault}" Width="12" Height="12" Canvas.Left="-6" Canvas.Top="-6"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Pth_Close" Property="Fill"        Value="{StaticResource ColorTextLight}"/>
                            <Setter TargetName="Bd"        Property="Background"  Value="{StaticResource ColorMaxGradientHover}"/>
                            <Setter TargetName="Bd"        Property="BorderBrush" Value="{StaticResource ColorMaxBorder}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Pth_Close" Property="Fill"        Value="{StaticResource ColorTextLight}"/>
                            <Setter TargetName="Bd"        Property="Background"  Value="{StaticResource ColorMaxGradientPressed}"/>
                            <Setter TargetName="Bd"        Property="BorderBrush" Value="{StaticResource ColorMaxBorder}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Pth_Close" Property="Data" Value="{StaticResource PathRestore}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="Pth_Close" Property="Data" Value="{StaticResource PathMax}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BtnClose" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle SnapsToDevicePixels="True" Opacity="0.5" Fill="{StaticResource ColorCloseMain}" StrokeThickness="2" Stroke="{StaticResource ColorCloseBorder}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Bd" BorderThickness="1" Background="Transparent">
                        <Path Name="Pth_Close" Data="{StaticResource PathClose}" Fill="{StaticResource ColorTextDefault}" Width="12" Height="12" Canvas.Left="-6" Canvas.Top="-6"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Pth_Close" Property="Fill"        Value="{StaticResource ColorTextLight}"/>
                            <Setter TargetName="Bd"        Property="Background"  Value="{StaticResource ColorCloseGradientHover}"/>
                            <Setter TargetName="Bd"        Property="BorderBrush" Value="{StaticResource ColorCloseBorder}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Pth_Close" Property="Fill"        Value="{StaticResource ColorTextLight}"/>
                            <Setter TargetName="Bd"        Property="Background"  Value="{StaticResource ColorCloseGradientPressed}"/>
                            <Setter TargetName="Bd"        Property="BorderBrush" Value="{StaticResource ColorCloseBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BtnLogo" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle SnapsToDevicePixels="True" Opacity="0.5" Margin="-2" Fill="{StaticResource ColorAccent}" StrokeThickness="2" Stroke="{StaticResource ColorAccentDeep}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Name="Img" Margin="0,0,0,2" Source="/Resource/Images/btn_logo_normal.png" Stretch="Fill" RenderOptions.BitmapScalingMode="Fant"/>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Source" Value="/Resource/Images/btn_logo_hover.png" TargetName="Img"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Source" Value="/Resource/Images/btn_logo_pressed.png" TargetName="Img"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChkStart" TargetType="{x:Type CheckBox}">
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border SnapsToDevicePixels="True" CornerRadius="14" BorderThickness="2" BorderBrush="{StaticResource ColorYellow2}">
                                    <Rectangle RadiusX="14" RadiusY="14" Opacity="0.5" Fill="{StaticResource ColorYellow2}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Name="border" SnapsToDevicePixels="True">
                        <Rectangle Name="rec" RadiusX="14" RadiusY="14" Fill="{StaticResource ColorAccentDeep}" Stroke="{StaticResource ColorAccent}" StrokeThickness="1"/>
                        <ContentPresenter Name="contentPresenter" TextElement.Foreground="{StaticResource ColorTextLight}" Margin="12,0,12,0" Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="True"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rec" Property="Fill"                                Value="{StaticResource ColorYellow2}"/>
                            <Setter TargetName="rec" Property="Stroke"                              Value="{StaticResource ColorYellow1}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ColorPopupBackground}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="rec" Property="Fill"                                Value="{StaticResource ColorYellow4}"/>
                            <Setter TargetName="rec" Property="Stroke"                              Value="{StaticResource ColorYellow3}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ColorPopupBackground}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="rec" Property="Fill"                                Value="{StaticResource ColorYellow3}"/>
                            <Setter TargetName="rec" Property="Stroke"                              Value="{StaticResource ColorYellow1}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ColorPopupBackground}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked"   Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="rec" Property="Fill"                                Value="{StaticResource ColorYellow2}"/>
                            <Setter TargetName="rec" Property="Stroke"                              Value="{StaticResource ColorYellow1}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ColorPopupBackground}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="rec" Property="Fill"                                Value="{StaticResource ColorYellow4}"/>
                            <Setter TargetName="rec" Property="Stroke"                              Value="{StaticResource ColorYellow3}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ColorPopupBackground}"/>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LbBadge" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource ColorTextLight}"/>
        <Setter Property="Background" Value="{StaticResource ColorRed}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0" ScaleY="0"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border SnapsToDevicePixels="True" MinHeight="20" MinWidth="20" CornerRadius="10" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,1,4,3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LvRequest" TargetType="{x:Type ListView}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border Name="Bd" SnapsToDevicePixels="True" Background="{StaticResource ColorListViewBackground}" BorderBrush="{StaticResource ColorListViewBorder}" BorderThickness="1">
                        <ScrollViewer Name="Sv" Focusable="False" Style="{StaticResource SvDefault}">
                            <ItemsPresenter SnapsToDevicePixels="True" Margin="8,8,8,0"/>
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ComputedVerticalScrollBarVisibility, ElementName=Sv}" Value="Visible">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ComputedHorizontalScrollBarVisibility, ElementName=Sv}" Value="Visible">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,1,0"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ComputedVerticalScrollBarVisibility, ElementName=Sv}"   Value="Visible"/>
                                <Condition Binding="{Binding ComputedHorizontalScrollBarVisibility, ElementName=Sv}" Value="Visible"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,0"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LvRequestItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Margin" Value="0,0,0,8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style x:Key="LvHistory" TargetType="{x:Type ListView}">
        <Setter Property="Foreground" Value="{StaticResource ColorTextDefault}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border Name="Bd" SnapsToDevicePixels="True" Background="{StaticResource ColorListViewBackground}" BorderBrush="{StaticResource ColorListViewBorder}" BorderThickness="1">
                        <ScrollViewer Name="Sv" Style="{StaticResource SvDefaultGrid}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ComputedVerticalScrollBarVisibility, ElementName=Sv}" Value="Visible">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ComputedHorizontalScrollBarVisibility, ElementName=Sv}" Value="Visible">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,1,0"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ComputedVerticalScrollBarVisibility, ElementName=Sv}"   Value="Visible"/>
                                <Condition Binding="{Binding ComputedHorizontalScrollBarVisibility, ElementName=Sv}" Value="Visible"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,0"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LvHistoryItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Bd" SnapsToDevicePixels="True" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" Padding="4,1,4,1">
                        <GridViewRowPresenter SnapsToDevicePixels="True" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background"  Value="{StaticResource ColorAccentDeep}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ColorAccentDeep}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background"  Value="{StaticResource ColorAccentDeep}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ColorAccent}"/>
                            <Setter                 Property="Foreground"  Value="{StaticResource ColorTextLight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChkStartPaause" TargetType="{x:Type CheckBox}">
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle SnapsToDevicePixels="True" RadiusX="14" RadiusY="14" Opacity="0.5" Fill="{StaticResource ColorAccent}" StrokeThickness="2" Stroke="{StaticResource ColorAccentDeep}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Name="border" SnapsToDevicePixels="True">
                        <Rectangle Name="rec" RadiusX="14" RadiusY="14" Stroke="{StaticResource ColorControlBorder}" StrokeThickness="1"/>
                        <ContentPresenter Name="contentPresenter" TextElement.Foreground="{StaticResource ColorTextDefault}" Margin="12,0,12,0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="True"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rec" Property="Fill"                                Value="{StaticResource ColorAccentDeep}"/>
                            <Setter TargetName="rec" Property="Stroke"                              Value="{StaticResource ColorAccent}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ColorTextLight}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="rec" Property="Fill"                                Value="{StaticResource ColorAccentDeep}"/>
                            <Setter TargetName="rec" Property="Stroke"                              Value="{StaticResource ColorAccentDeep}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ColorTextLight}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked"   Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="rec" Property="Fill"                                Value="{StaticResource ColorAccentDeep}"/>
                            <Setter TargetName="rec" Property="Stroke"                              Value="{StaticResource ColorAccent}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ColorTextLight}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="rec" Property="Fill"                                Value="{StaticResource ColorAccentDeep}"/>
                            <Setter TargetName="rec" Property="Stroke"                              Value="{StaticResource ColorAccentDeep}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ColorTextLight}"/>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BtnText" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle SnapsToDevicePixels="True" Opacity="0.5" Fill="{StaticResource ColorAccent}" StrokeThickness="2" Stroke="{StaticResource ColorAccentDeep}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" SnapsToDevicePixels="True" Background="Transparent" BorderBrush="{StaticResource ColorControlBorder}" BorderThickness="0,0,0,1">
                        <TextBlock Text="{TemplateBinding Content}" Foreground="{StaticResource ColorTextLight}" Margin="6,0,6,0" TextWrapping="Wrap" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ColorAccent}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ColorAccent}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type custom:CustomProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:CustomProgressBar}">
                    <Grid Name="TemplateRoot" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Moving">
                                <VisualState x:Name="Start">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Brush_Indicator" Storyboard.TargetProperty="Transform.X">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.5" Value="32"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Stop"/>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="Showing">
                                <VisualState x:Name="Show">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Shape_Indicator_Dummy" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Hide">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Shape_Indicator_Dummy" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle Fill="{StaticResource ColorListViewBackground}" Stroke="{StaticResource ColorListViewBorder}" StrokeThickness="1" RadiusX="8" RadiusY="8"/>

                        <custom:ShapeProgressIndicator x:Name="Shape_Indicator" Stroke="{StaticResource ColorAccent}" StrokeThickness="1">
                            <custom:ShapeProgressIndicator.Fill>
                                <DrawingBrush x:Name="Brush_Indicator" TileMode="Tile" Viewport="0,0,32,16" ViewportUnits="Absolute">
                                    <DrawingBrush.Transform>
                                        <TranslateTransform X="0"/>
                                    </DrawingBrush.Transform>

                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="{StaticResource ColorAccentDeep}">
                                                    <GeometryDrawing.Geometry>
                                                        <PathGeometry Figures="M0,0 32,0 32,16 0,16Z"/>
                                                    </GeometryDrawing.Geometry>
                                                </GeometryDrawing>

                                                <GeometryDrawing Brush="{StaticResource ColorAccent}">
                                                    <GeometryDrawing.Geometry>
                                                        <PathGeometry Figures="M0,16 16,0 32,0 16,16Z"/>
                                                    </GeometryDrawing.Geometry>
                                                </GeometryDrawing>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </custom:ShapeProgressIndicator.Fill>
                        </custom:ShapeProgressIndicator>
                        <custom:ShapeProgressIndicator x:Name="Shape_Indicator_Dummy" Fill="{StaticResource ColorAccentDeep}" Stroke="{StaticResource ColorAccent}" StrokeThickness="1" Opacity="0"/>

                        <TextBlock Name="Tb_Percentage" Foreground="{StaticResource ColorTextLight}" HorizontalAlignment="Center"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter TargetName="Tb_Percentage" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
